# version: 2.1

# orbs:
#   node: circleci/node@5.0.1
#   docker: circleci/docker@2.1.1

# jobs:
#   #configure a job called build-and-push to publish docker image to the docker hub registry only when the test job passed.
#   build-and-push:
#     docker:
#       - image: cimg/node:16.10
#     steps:
#       - checkout
#       - setup_remote_docker
#       - node/install-packages:
#           pkg-manager: npm
#       - run: |
#           echo "Building Docker image..."
#           docker build -t $DOCKERHUB_USERNAME/education-space .
#       - run: |
#           echo "$DOCKERHUB_PASSWORD" | docker login -u $DOCKERHUB_USERNAME --password-stdin
#           docker push $DOCKERHUB_USERNAME/education-space
#   #build:
#   #  docker:
#   #    - image: cimg/node:16.10
#   #  steps:
#   #    - checkout
#   #    - node/install-packages:
#   #        pkg-manager: npm
#   #    - run: |
#   #        echo "Installing dependencies..."
#   #        npm install

#   test:
#     docker:
#       - image: cimg/node:16.10
#     steps:
#       - checkout
#       - node/install-packages:
#           pkg-manager: npm
#       - run: |
#           echo "Running tests..."
#           npm run test

# workflows:
#   simple_workflow:
#     jobs:
#       - test
#       - build-and-push:
#           requires:
#             - test
#           filters:
#             branches:
#               only: main

#########################
version: 2.1
orbs:
  node: circleci/node@5.0.1
  docker: circleci/docker@2.1.4
  heroku: circleci/heroku@2.0.0
jobs:
  build:
    docker:
      - image: cimg/node:16.10
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run: |
          echo Installing dependencies...”
          npm install
  test:
    docker:
      - image: cimg/node:16.10
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run: |
          echo “Running tests...”
          npm run test

  # publish:
  #   executor: docker/docker
  #   steps:
  #     - setup_remote_docker
  #     - checkout
  #     - docker/check
  #     - docker/build:
  #         image: $DOCKERHUB_USERNAME/education-space
  #     - run: |
  #         echo "Logging in to Docker Hub..."
  #         echo "$DOCKER_PASSWORD" | docker login --username $DOCKER_USERNAME --password-stdin
  #         docker push $DOCKERHUB_USERNAME/education-space
  #- docker/push:
  #   image: $DOCKERHUB_USERNAME/education-space

  publish:
    executor: docker/docker
    steps:
      - setup_remote_docker
      - checkout
      - docker/check:
          docker-username: DOCKERHUB_LOGIN # DOCKER_LOGIN is the default value, if it exists, it automatically would be used.
          docker-password: DOCKERHUB_PASSWORD # DOCKER_PASSWORD is the default value
      - docker/build:
          image: pyitphyomin/education-space
      - docker/push:
          image: pyitphyomin/education-space

  deploy:
    docker:
      - image: cimg/node:16.10
    steps:
      - setup_remote_docker
      - heroku/install
      - checkout
      - run:
          name: Heroku Container Push
          command: |
            heroku container:login
            heroku stack:set container -a $HEROKU_APP_NAME
            heroku container:push web -a $HEROKU_APP_NAME
            heroku container:release web -a $HEROKU_APP_NAME

workflows:
  simple_workflow:
    jobs:
      - build
      - test:
          requires:
            - build
      - publish:
          requires:
            - test
      - deploy:
          requires:
            - publish
